on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "Windows", os: windows-latest }
          - { name: "Ubuntu",  os: ubuntu-latest }

    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: mlugg/setup-zig@v1

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          vulkan_version: 1.3.290.0
          install_runtime: true
          cache: true
          stripdown: true

      - name: Setup Linux Env
        if: contains(runner.os, 'ubuntu')
        run: source $VULKAN_SDK/setup-env.sh

      - name: Setup Windows Env
        if: contains(runner.os, 'windows')
        run: |
          [System.Environment]::SetEnvironmentVariable("PATH", [Environment]::GetEnvironmentVariable("Path", "User") + ";$env:VULKAN_SDK\Bin", "User")
      
      - name: Build
        run: zig build

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-app
          path: zig-out/bin/